// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package processor represents the world "tangent:logs/processor@0.1.0".
package processor

import (
	"go.bytecodealliance.org/cm"
)

// S3Sink represents the record "tangent:logs/processor@0.1.0#s3-sink".
//
//	record s3-sink {
//		name: string,
//		key-prefix: option<string>,
//	}
type S3Sink struct {
	_         cm.HostLayout     `json:"-"`
	Name      string            `json:"name"`
	KeyPrefix cm.Option[string] `json:"key-prefix"`
}

// DefaultSink represents the record "tangent:logs/processor@0.1.0#default-sink".
//
//	record default-sink {
//		name: string,
//	}
type DefaultSink struct {
	_    cm.HostLayout `json:"-"`
	Name string        `json:"name"`
}

// FileSink represents the record "tangent:logs/processor@0.1.0#file-sink".
//
//	record file-sink {
//		name: string,
//	}
type FileSink struct {
	_    cm.HostLayout `json:"-"`
	Name string        `json:"name"`
}

// Sink represents the variant "tangent:logs/processor@0.1.0#sink".
//
//	variant sink {
//		s3(s3-sink),
//		file(file-sink),
//		default(default-sink),
//	}
type Sink cm.Variant[uint8, S3SinkShape, S3Sink]

// SinkS3 returns a [Sink] of case "s3".
func SinkS3(data S3Sink) Sink {
	return cm.New[Sink](0, data)
}

// S3 returns a non-nil *[S3Sink] if [Sink] represents the variant case "s3".
func (self *Sink) S3() *S3Sink {
	return cm.Case[S3Sink](self, 0)
}

// SinkFile returns a [Sink] of case "file".
func SinkFile(data FileSink) Sink {
	return cm.New[Sink](1, data)
}

// File returns a non-nil *[FileSink] if [Sink] represents the variant case "file".
func (self *Sink) File() *FileSink {
	return cm.Case[FileSink](self, 1)
}

// SinkDefault returns a [Sink] of case "default".
func SinkDefault(data DefaultSink) Sink {
	return cm.New[Sink](2, data)
}

// Default returns a non-nil *[DefaultSink] if [Sink] represents the variant case "default".
func (self *Sink) Default() *DefaultSink {
	return cm.Case[DefaultSink](self, 2)
}

var _SinkStrings = [3]string{
	"s3",
	"file",
	"default",
}

// String implements [fmt.Stringer], returning the variant case name of v.
func (v Sink) String() string {
	return _SinkStrings[v.Tag()]
}

// Output represents the record "tangent:logs/processor@0.1.0#output".
//
//	record output {
//		sink: sink,
//		data: list<u8>,
//	}
type Output struct {
	_    cm.HostLayout  `json:"-"`
	Sink Sink           `json:"sink"`
	Data cm.List[uint8] `json:"data"`
}
